[uwsgi]

# 对本机8000端口提供服务
# http = 127.0.0.1:8000
socket = 127.0.0.1:8000

# 项目根目录 (工作路径)
chdir = /home/ubuntu/myweb

# 主进程
mastre = true

# 指定wsgi.py文件位置, 相对于chdir
wsgi-file = myweb/wsgi.py

# python 虚拟环境路径
# virtualenv = /home/ubuntu/dj2
# pythonpath = /home/ubuntu/dj2/lib/python3.7/site-packages

# 进程数量
processes = 4

# 每个进程的线程数量
threads = 2

# pid 文件存放路径
pidfile = /home/ubuntu/myweb/uwsgi.pid

# 重启的时候使用的 pid 号
touch-reload = /home/ubuntu/myweb/uwsgi.pid

# post 请求超过 字节 就缓存值磁盘
post-buffering = 8192

# 缓冲区大小. 默认是4KB.
buffer-size = 32768

# 设置后台运行保存日志. 只要配置了daemonize就会让uwsgi后台运行, 同时将日志输出到指定目录
# 未使用 systemd 时日志文件, 会一直保持在后台
# daemonize = /home/ubuntu/logs/uwsgi/uwsgi.log

# 使用systemd时日志文件
logto=/home/ubuntu/logs/uwsgi/uwsgi.log

# 停止输出 request log
disable-logging = true

# 当服务器退出的时候自动清理环境, 删除 unix socket 文件和 pid 文件
vacuum = true

# python 文件修改后自动重启
py-autoreload = 1

# 设置一个请求超时（秒）, 就丢弃掉
harakiri = 60

# 当一个请求被 harakiri 掉, 输出一条日志
harakiri-verbose = true

# 静态文件路径
static-map = /static=/home/ubuntu/myweb/static/
